{"version":3,"file":"ApiDocs-aDmFRY_W.js","sources":["../../../../js/core/src/api_docs/NoApi.svelte","../../../../js/core/src/api_docs/ApiBanner.svelte","../../../../js/core/src/api_docs/utils.ts","../../../../js/core/src/api_docs/ParametersSnippet.svelte","../../../../js/core/src/api_docs/CopyButton.svelte","../../../../js/core/src/api_docs/InstallSnippet.svelte","../../../../js/core/src/api_docs/EndpointDetail.svelte","../../../../js/core/src/api_docs/CodeSnippet.svelte","../../../../js/core/src/api_docs/RecordingSnippet.svelte","../../../../js/core/src/api_docs/img/python.svg","../../../../js/core/src/api_docs/img/javascript.svg","../../../../js/core/src/api_docs/img/bash.svg","../../../../js/core/src/api_docs/ResponseSnippet.svelte","../../../../js/core/src/api_docs/img/mcp.svg","../../../../js/core/src/api_docs/ApiDocs.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport Clear from \"./img/clear.svelte\";\n\n\tconst dispatch = createEventDispatcher();\n\n\texport let root: string;\n</script>\n\n<div class=\"wrap prose\">\n\t<h1>API Docs</h1>\n\t<p class=\"attention\">\n\t\tNo API Routes found for\n\t\t<code>\n\t\t\t{root}\n\t\t</code>\n\t</p>\n\t<p>\n\t\tTo expose an API endpoint of your app in this page, set the <code>\n\t\t\tapi_name\n\t\t</code>\n\t\tparameter of the event listener.\n\t\t<br />\n\t\tFor more information, visit the\n\t\t<a href=\"https://gradio.app/sharing_your_app/#api-page\" target=\"_blank\">\n\t\t\tAPI Page guide\n\t\t</a>\n\t\t. To hide the API documentation button and this page, set\n\t\t<code>show_api=False</code>\n\t\tin the\n\t\t<code>Blocks.launch()</code>\n\t\tmethod.\n\t</p>\n</div>\n\n<button on:click={() => dispatch(\"close\")}>\n\t<Clear />\n</button>\n\n<style>\n\t.wrap {\n\t\tpadding: var(--size-6);\n\t}\n\n\t.attention {\n\t\tfont-weight: var(--weight-bold);\n\t\tfont-size: var(--text-lg);\n\t}\n\n\t.attention code {\n\t\tborder: none;\n\t\tbackground: none;\n\t\tcolor: var(--color-accent);\n\t\tfont-weight: var(--weight-bold);\n\t}\n\n\tbutton {\n\t\tposition: absolute;\n\t\ttop: var(--size-5);\n\t\tright: var(--size-6);\n\t\twidth: var(--size-4);\n\t\tcolor: var(--body-text-color);\n\t}\n\n\tbutton:hover {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t@media (--screen-md) {\n\t\tbutton {\n\t\t\ttop: var(--size-6);\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport api_logo from \"./img/api-logo.svg\";\n\timport Clear from \"./img/clear.svelte\";\n\timport { BaseButton } from \"@gradio/button\";\n\n\texport let root: string;\n\texport let api_count: number;\n\texport let current_language: \"python\" | \"javascript\" | \"bash\" | \"mcp\" =\n\t\t\"python\";\n\n\tconst dispatch = createEventDispatcher();\n</script>\n\n<h2>\n\t<img src={api_logo} alt=\"\" />\n\t<div class=\"title\">\n\t\tAPI documentation\n\t\t<div class=\"url\">\n\t\t\t{root}\n\t\t</div>\n\t</div>\n\t<span class=\"counts\">\n\t\t{#if current_language !== \"mcp\"}\n\t\t\t<BaseButton\n\t\t\t\tsize=\"sm\"\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\telem_id=\"start-api-recorder\"\n\t\t\t\ton:click={() => dispatch(\"close\", { api_recorder_visible: true })}\n\t\t\t>\n\t\t\t\t<div class=\"loading-dot self-baseline\"></div>\n\t\t\t\t<p class=\"self-baseline btn-text\">API Recorder</p>\n\t\t\t</BaseButton>\n\t\t{/if}\n\t\t<p>\n\t\t\t<span class=\"url\">{api_count}</span>\n\t\t\t{#if current_language !== \"mcp\"}API endpoint{:else}MCP Tool{/if}{#if api_count > 1}s{/if}<br\n\t\t\t/>\n\t\t</p>\n\t</span>\n</h2>\n\n<button on:click={() => dispatch(\"close\")}>\n\t<Clear />\n</button>\n\n<style>\n\th2 {\n\t\tdisplay: flex;\n\t\tcolor: var(--body-text-color);\n\t\tfont-weight: var(--weight-semibold);\n\t\tgap: var(--size-4);\n\t}\n\n\th2 img {\n\t\tmargin-right: var(--size-2);\n\t\twidth: var(--size-4);\n\t\tdisplay: inline-block;\n\t}\n\n\t.url {\n\t\tcolor: var(--color-accent);\n\t\tfont-weight: normal;\n\t}\n\n\tbutton {\n\t\tposition: absolute;\n\t\ttop: var(--size-5);\n\t\tright: var(--size-6);\n\t\twidth: var(--size-4);\n\t\tcolor: var(--body-text-color);\n\t}\n\n\tbutton:hover {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t@media (--screen-md) {\n\t\tbutton {\n\t\t\ttop: var(--size-6);\n\t\t}\n\n\t\th2 img {\n\t\t\twidth: var(--size-5);\n\t\t}\n\t}\n\n\t.counts {\n\t\tmargin-top: auto;\n\t\tmargin-right: var(--size-8);\n\t\tmargin-bottom: auto;\n\t\tmargin-left: auto;\n\t\tcolor: var(--body-text-color);\n\t\tfont-weight: var(--weight-light);\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tgap: 0.5rem;\n\t}\n\n\t.loading-dot {\n\t\tposition: relative;\n\t\tleft: -9999px;\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tborder-radius: 6px;\n\t\tbackground-color: #fd7b00;\n\t\tcolor: #fd7b00;\n\t\tbox-shadow: 9999px 0 0 -1px;\n\t\tmargin-right: 0.3rem;\n\t}\n\n\t.self-baseline {\n\t\talign-self: baseline;\n\t}\n\t.title {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tgap: 0.5rem;\n\t}\n\t.btn-text {\n\t\tfont-size: var(--text-lg);\n\t}\n</style>\n","// eslint-disable-next-line complexity\nexport function represent_value(\n\tvalue: string,\n\ttype: string | undefined,\n\tlang: \"js\" | \"py\" | \"bash\" | null = null\n): string | null | number | boolean | Record<string, unknown> {\n\tif (type === undefined) {\n\t\treturn lang === \"py\" ? \"None\" : null;\n\t}\n\tif (value === null && lang === \"py\") {\n\t\treturn \"None\";\n\t}\n\tif (type === \"string\" || type === \"str\") {\n\t\treturn lang === null ? value : '\"' + value + '\"';\n\t} else if (type === \"number\") {\n\t\treturn lang === null ? parseFloat(value) : value;\n\t} else if (type === \"boolean\" || type == \"bool\") {\n\t\tif (lang === \"py\") {\n\t\t\tvalue = String(value);\n\t\t\treturn value === \"true\" ? \"True\" : \"False\";\n\t\t} else if (lang === \"js\" || lang === \"bash\") {\n\t\t\treturn value;\n\t\t}\n\t\treturn value === \"true\";\n\t} else if (type === \"List[str]\") {\n\t\tvalue = JSON.stringify(value);\n\t\treturn value;\n\t} else if (type.startsWith(\"Literal['\")) {\n\t\t// a literal of strings\n\t\treturn '\"' + value + '\"';\n\t}\n\t// assume object type\n\tif (lang === null) {\n\t\treturn value === \"\" ? null : JSON.parse(value);\n\t} else if (typeof value === \"string\") {\n\t\tif (value === \"\") {\n\t\t\treturn lang === \"py\" ? \"None\" : \"null\";\n\t\t}\n\t\treturn value;\n\t}\n\tif (lang === \"bash\") {\n\t\tvalue = simplify_file_data(value);\n\t}\n\tif (lang === \"py\") {\n\t\tvalue = replace_file_data_with_file_function(value);\n\t}\n\treturn stringify_except_file_function(value);\n}\n\nexport function is_potentially_nested_file_data(obj: any): boolean {\n\tif (typeof obj === \"object\" && obj !== null) {\n\t\tif (obj.hasOwnProperty(\"url\") && obj.hasOwnProperty(\"meta\")) {\n\t\t\tif (\n\t\t\t\ttypeof obj.meta === \"object\" &&\n\t\t\t\tobj.meta !== null &&\n\t\t\t\tobj.meta._type === \"gradio.FileData\"\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\tif (typeof obj === \"object\" && obj !== null) {\n\t\tfor (let key in obj) {\n\t\t\tif (typeof obj[key] === \"object\") {\n\t\t\t\tlet result = is_potentially_nested_file_data(obj[key]);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction simplify_file_data(obj: any): any {\n\tif (typeof obj === \"object\" && obj !== null && !Array.isArray(obj)) {\n\t\tif (\n\t\t\t\"url\" in obj &&\n\t\t\tobj.url &&\n\t\t\t\"meta\" in obj &&\n\t\t\tobj.meta?._type === \"gradio.FileData\"\n\t\t) {\n\t\t\treturn { path: obj.url, meta: { _type: \"gradio.FileData\" } };\n\t\t}\n\t}\n\tif (Array.isArray(obj)) {\n\t\tobj.forEach((item, index) => {\n\t\t\tif (typeof item === \"object\" && item !== null) {\n\t\t\t\tobj[index] = simplify_file_data(item); // Recurse and update array elements\n\t\t\t}\n\t\t});\n\t} else if (typeof obj === \"object\" && obj !== null) {\n\t\tObject.keys(obj).forEach((key) => {\n\t\t\tobj[key] = simplify_file_data(obj[key]); // Recurse and update object properties\n\t\t});\n\t}\n\treturn obj;\n}\n\nfunction replace_file_data_with_file_function(obj: any): any {\n\tif (typeof obj === \"object\" && obj !== null && !Array.isArray(obj)) {\n\t\tif (\n\t\t\t\"url\" in obj &&\n\t\t\tobj.url &&\n\t\t\t\"meta\" in obj &&\n\t\t\tobj.meta?._type === \"gradio.FileData\"\n\t\t) {\n\t\t\treturn `handle_file('${obj.url}')`;\n\t\t}\n\t}\n\tif (Array.isArray(obj)) {\n\t\tobj.forEach((item, index) => {\n\t\t\tif (typeof item === \"object\" && item !== null) {\n\t\t\t\tobj[index] = replace_file_data_with_file_function(item); // Recurse and update array elements\n\t\t\t}\n\t\t});\n\t} else if (typeof obj === \"object\" && obj !== null) {\n\t\tObject.keys(obj).forEach((key) => {\n\t\t\tobj[key] = replace_file_data_with_file_function(obj[key]); // Recurse and update object properties\n\t\t});\n\t}\n\treturn obj;\n}\n\nfunction stringify_except_file_function(obj: any): string {\n\tlet jsonString = JSON.stringify(obj, (key, value) => {\n\t\tif (value === null) {\n\t\t\treturn \"UNQUOTEDNone\";\n\t\t}\n\t\tif (\n\t\t\ttypeof value === \"string\" &&\n\t\t\tvalue.startsWith(\"handle_file(\") &&\n\t\t\tvalue.endsWith(\")\")\n\t\t) {\n\t\t\treturn `UNQUOTED${value}`; // Flag the special strings\n\t\t}\n\t\treturn value;\n\t});\n\tconst regex = /\"UNQUOTEDhandle_file\\(([^)]*)\\)\"/g;\n\tjsonString = jsonString.replace(regex, (match, p1) => `handle_file(${p1})`);\n\tconst regexNone = /\"UNQUOTEDNone\"/g;\n\treturn jsonString.replace(regexNone, \"None\");\n}\n","<script lang=\"ts\">\n\timport { Loader } from \"@gradio/statustracker\";\n\timport { represent_value } from \"./utils\";\n\n\texport let is_running: boolean;\n\texport let endpoint_returns: any;\n\texport let js_returns: any;\n\texport let current_language: \"python\" | \"javascript\" | \"bash\";\n</script>\n\n<h4>\n\t<div class=\"toggle-icon\">\n\t\t<div class=\"toggle-dot\" />\n\t</div>\n\tAccepts {endpoint_returns.length} parameter{#if endpoint_returns.length != 1}s{/if}:\n</h4>\n\n<div class:hide={is_running}>\n\t{#each endpoint_returns as { label, python_type, component, parameter_name, parameter_has_default, parameter_default }, i}\n\t\t<hr class=\"hr\" />\n\t\t<div style=\"margin:10px;\">\n\t\t\t<p style=\"white-space: nowrap; overflow-x: auto;\">\n\t\t\t\t<span class=\"code\" style=\"margin-right: 10px;\"\n\t\t\t\t\t>{current_language !== \"bash\" && parameter_name\n\t\t\t\t\t\t? parameter_name\n\t\t\t\t\t\t: \"[\" + i + \"]\"}</span\n\t\t\t\t>\n\t\t\t\t<span class=\"code highlight\" style=\"margin-right: 10px;\"\n\t\t\t\t\t>{#if current_language === \"python\"}{python_type.type}{#if parameter_has_default && parameter_default === null}&nbsp;|\n\t\t\t\t\t\t\tNone{/if}{:else}{js_returns[i].type || \"any\"}{/if}</span\n\t\t\t\t>\n\t\t\t\t{#if !parameter_has_default || current_language == \"bash\"}<span\n\t\t\t\t\t\tstyle=\"font-weight:bold\">Required</span\n\t\t\t\t\t>{:else}<span> Default: </span><span\n\t\t\t\t\t\tclass=\"code\"\n\t\t\t\t\t\tstyle=\"font-size: var(--text-sm);\"\n\t\t\t\t\t\t>{represent_value(parameter_default, python_type.type, \"py\")}</span\n\t\t\t\t\t>{/if}\n\t\t\t</p>\n\t\t\t<p class=\"desc\">\n\t\t\t\tThe input value that is provided in the \"{label}\" <!--\n\t-->{component}\n\t\t\t\tcomponent<!--\n\t-->. {python_type.description}\n\t\t\t</p>\n\t\t</div>\n\t{/each}\n</div>\n{#if is_running}\n\t<div class=\"load-wrap\">\n\t\t<Loader margin={false} />\n\t</div>\n{/if}\n\n<style>\n\t.hr {\n\t\tborder: 0;\n\t\theight: 1px;\n\t\tbackground: var(--color-accent-soft);\n\t\tmargin-bottom: 12px;\n\t}\n\n\t.code {\n\t\tfont-family: var(--font-mono);\n\t\tdisplay: inline;\n\t}\n\n\t.highlight {\n\t\tbackground: var(--color-accent-soft);\n\t\tcolor: var(--color-accent);\n\t\tpadding: var(--size-1);\n\t}\n\n\t.desc {\n\t\tcolor: var(--body-text-color-subdued);\n\t\tfont-size: var(--text-lg);\n\t\tmargin-top: var(--size-1);\n\t}\n\n\th4 {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-top: var(--size-6);\n\t\tmargin-bottom: var(--size-3);\n\t\tcolor: var(--body-text-color);\n\t\tfont-weight: var(--weight-bold);\n\t}\n\n\t.toggle-icon {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-right: var(--size-2);\n\t\tborder-radius: var(--radius-full);\n\t\tbackground: var(--color-grey-300);\n\t\twidth: 12px;\n\t\theight: 4px;\n\t}\n\n\t.toggle-dot {\n\t\tborder-radius: var(--radius-full);\n\t\tbackground: var(--color-grey-700);\n\t\twidth: 6px;\n\t\theight: 6px;\n\t\tmargin-right: auto;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { BaseButton } from \"@gradio/button\";\n\texport let code: string;\n\tlet copy_text = \"copy\";\n\n\tfunction copy(): void {\n\t\tnavigator.clipboard.writeText(code);\n\t\tcopy_text = \"copied!\";\n\t\tsetTimeout(() => {\n\t\t\tcopy_text = \"copy\";\n\t\t}, 1500);\n\t}\n</script>\n\n<BaseButton size=\"sm\" on:click={copy}>\n\t{copy_text}\n</BaseButton>\n","<script lang=\"ts\">\n\timport CopyButton from \"./CopyButton.svelte\";\n\timport { Block } from \"@gradio/atoms\";\n\n\texport let current_language: \"python\" | \"javascript\" | \"bash\" | \"mcp\";\n\n\tlet py_install = \"pip install gradio_client\";\n\tlet js_install = \"npm i -D @gradio/client\";\n\tlet bash_install = \"curl --version\";\n</script>\n\n<Block>\n\t<code>\n\t\t{#if current_language === \"python\"}\n\t\t\t<div class=\"copy\">\n\t\t\t\t<CopyButton code={py_install} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<pre>$ {py_install}</pre>\n\t\t\t</div>\n\t\t{:else if current_language === \"javascript\"}\n\t\t\t<div class=\"copy\">\n\t\t\t\t<CopyButton code={js_install} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<pre>$ {js_install}</pre>\n\t\t\t</div>\n\t\t{:else if current_language === \"bash\"}\n\t\t\t<div class=\"copy\">\n\t\t\t\t<CopyButton code={bash_install} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<pre>$ {bash_install}</pre>\n\t\t\t</div>\n\t\t{/if}\n\t</code>\n</Block>\n\n<style>\n\tcode pre {\n\t\toverflow-x: auto;\n\t\tcolor: var(--body-text-color);\n\t\tfont-family: var(--font-mono);\n\t\ttab-size: 2;\n\t}\n\n\tcode {\n\t\tposition: relative;\n\t\tdisplay: block;\n\t}\n\n\t.copy {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tmargin-top: -5px;\n\t\tmargin-right: -5px;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let api_name: string | null = null;\n\texport let description: string | null = null;\n</script>\n\n<h3>\n\tAPI name:\n\t<span class=\"post\">{\"/\" + api_name}</span>\n\t<span class=\"desc\">{description}</span>\n</h3>\n\n<style>\n\th3 {\n\t\tcolor: var(--body-text-color);\n\t\tfont-weight: var(--section-header-text-weight);\n\t\tfont-size: var(--text-lg);\n\t}\n\n\t.post {\n\t\tmargin-right: var(--size-2);\n\t\tborder: 1px solid var(--border-color-accent);\n\t\tborder-radius: var(--radius-sm);\n\t\tbackground: var(--color-accent-soft);\n\t\tpadding-right: var(--size-1);\n\t\tpadding-bottom: var(--size-1);\n\t\tpadding-left: var(--size-1);\n\t\tcolor: var(--color-accent);\n\t\tfont-weight: var(--weight-semibold);\n\t}\n\n\t.desc {\n\t\tcolor: var(--body-text-color-subdued);\n\t\tfont-size: var(--text-lg);\n\t\tmargin-top: var(--size-1);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport type { ComponentMeta, Dependency } from \"../types\";\n\timport CopyButton from \"./CopyButton.svelte\";\n\timport { represent_value, is_potentially_nested_file_data } from \"./utils\";\n\timport { Block } from \"@gradio/atoms\";\n\timport EndpointDetail from \"./EndpointDetail.svelte\";\n\n\tinterface EndpointParameter {\n\t\tlabel: string;\n\t\ttype: string;\n\t\tpython_type: { type: string };\n\t\tcomponent: string;\n\t\texample_input: string;\n\t\tserializer: string;\n\t}\n\n\texport let dependency: Dependency;\n\texport let root: string;\n\texport let api_prefix: string;\n\texport let space_id: string | null;\n\texport let endpoint_parameters: any;\n\texport let username: string | null;\n\texport let current_language: \"python\" | \"javascript\" | \"bash\";\n\texport let api_description: string | null = null;\n\n\tlet python_code: HTMLElement;\n\tlet js_code: HTMLElement;\n\tlet bash_post_code: HTMLElement;\n\tlet bash_get_code: HTMLElement;\n\n\tlet has_file_path = endpoint_parameters.some((param: EndpointParameter) =>\n\t\tis_potentially_nested_file_data(param.example_input)\n\t);\n\tlet blob_components = [\"Audio\", \"File\", \"Image\", \"Video\"];\n\tlet blob_examples: any[] = endpoint_parameters.filter(\n\t\t(param: EndpointParameter) => blob_components.includes(param.component)\n\t);\n\n\t$: normalised_api_prefix = api_prefix ? api_prefix : \"/\";\n\t$: normalised_root = root.replace(/\\/$/, \"\");\n</script>\n\n<div class=\"container\">\n\t<EndpointDetail\n\t\tapi_name={dependency.api_name}\n\t\tdescription={api_description}\n\t/>\n\t{#if current_language === \"python\"}\n\t\t<Block>\n\t\t\t<code>\n\t\t\t\t<div class=\"copy\">\n\t\t\t\t\t<CopyButton code={python_code?.innerText} />\n\t\t\t\t</div>\n\t\t\t\t<div bind:this={python_code}>\n\t\t\t\t\t<pre><span class=\"highlight\">from</span> gradio_client <span\n\t\t\t\t\t\t\tclass=\"highlight\">import</span\n\t\t\t\t\t\t> Client{#if has_file_path}, handle_file{/if}\n\nclient = Client(<span class=\"token string\">\"{space_id || root}\"</span\n\t\t\t\t\t\t>{#if username !== null}, auth=(\"{username}\", **password**){/if})\nresult = client.<span class=\"highlight\">predict</span\n\t\t\t\t\t\t>(<!--\n-->{#each endpoint_parameters as { python_type, example_input, parameter_name, parameter_has_default, parameter_default }, i}<!--\n        -->\n\t\t{parameter_name\n\t\t\t\t\t\t\t\t? parameter_name + \"=\"\n\t\t\t\t\t\t\t\t: \"\"}<span\n\t\t\t\t\t\t\t\t>{represent_value(\n\t\t\t\t\t\t\t\t\tparameter_has_default ? parameter_default : example_input,\n\t\t\t\t\t\t\t\t\tpython_type.type,\n\t\t\t\t\t\t\t\t\t\"py\"\n\t\t\t\t\t\t\t\t)}</span\n\t\t\t\t\t\t\t>,{/each}<!--\n\n\t\t-->\n\t\tapi_name=<span class=\"api-name\">\"/{dependency.api_name}\"</span><!--\n\t\t-->\n)\n<span class=\"highlight\">print</span>(result)</pre>\n\t\t\t\t</div>\n\t\t\t</code>\n\t\t</Block>\n\t{:else if current_language === \"javascript\"}\n\t\t<Block>\n\t\t\t<code>\n\t\t\t\t<div class=\"copy\">\n\t\t\t\t\t<CopyButton code={js_code?.innerText} />\n\t\t\t\t</div>\n\t\t\t\t<div bind:this={js_code}>\n\t\t\t\t\t<pre>import &lbrace; Client &rbrace; from \"@gradio/client\";\n{#each blob_examples as { component, example_input }, i}<!--\n-->\nconst response_{i} = await fetch(\"{example_input.url}\");\nconst example{component} = await response_{i}.blob();\n\t\t\t\t\t\t{/each}<!--\n-->\nconst client = await Client.connect(<span class=\"token string\"\n\t\t\t\t\t\t\t>\"{space_id || root}\"</span\n\t\t\t\t\t\t>{#if username !== null}, &lbrace;auth: [\"{username}\", **password**]&rbrace;{/if});\nconst result = await client.predict(<span class=\"api-name\"\n\t\t\t\t\t\t\t>\"/{dependency.api_name}\"</span\n\t\t\t\t\t\t>, &lbrace; <!--\n-->{#each endpoint_parameters as { label, parameter_name, type, python_type, component, example_input, serializer }, i}<!--\n\t\t-->{#if blob_components.includes(component)}<!--\n\t-->\n\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclass=\"example-inputs\"\n\t\t\t\t\t\t\t\t\t>{parameter_name}: example{component}</span\n\t\t\t\t\t\t\t\t>, <!--\n\t\t--><span class=\"desc\"><!--\n\t\t--></span\n\t\t\t\t\t\t\t\t><!--\n\t\t-->{:else}<!--\n\t-->\t\t\n\t\t<span class=\"example-inputs\"\n\t\t\t\t\t\t\t\t\t>{parameter_name}: {represent_value(\n\t\t\t\t\t\t\t\t\t\texample_input,\n\t\t\t\t\t\t\t\t\t\tpython_type.type,\n\t\t\t\t\t\t\t\t\t\t\"js\"\n\t\t\t\t\t\t\t\t\t)}</span\n\t\t\t\t\t\t\t\t>, <!--\n--><!--\n-->{/if}\n\t\t\t\t\t\t{/each}\n&rbrace;);\n\nconsole.log(result.data);\n</pre>\n\t\t\t\t</div>\n\t\t\t</code>\n\t\t</Block>\n\t{:else if current_language === \"bash\"}\n\t\t<Block>\n\t\t\t<code>\n\t\t\t\t<div class=\"copy\">\n\t\t\t\t\t<CopyButton code={bash_post_code?.innerText}></CopyButton>\n\t\t\t\t</div>\n\n\t\t\t\t<div bind:this={bash_post_code}>\n\t\t\t\t\t<pre>curl -X POST {normalised_root}{normalised_api_prefix}/call/{dependency.api_name} -s -H \"Content-Type: application/json\" -d '{\"{\"}\n  \"data\": [{#each endpoint_parameters as { label, parameter_name, type, python_type, component, example_input, serializer }, i}\n\t\t\t\t\t\t\t<!-- \n-->{represent_value(\n\t\t\t\t\t\t\t\texample_input,\n\t\t\t\t\t\t\t\tpython_type.type,\n\t\t\t\t\t\t\t\t\"bash\"\n\t\t\t\t\t\t\t)}{#if i < endpoint_parameters.length - 1},\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{/each}\n]{\"}\"}' \\\n  | awk -F'\"' '{\"{\"} print $4{\"}\"}'  \\\n  | read EVENT_ID; curl -N {normalised_root}{normalised_api_prefix}/call/{dependency.api_name}/$EVENT_ID</pre>\n\t\t\t\t</div>\n\t\t\t</code>\n\t\t</Block>\n\t{/if}\n</div>\n\n<style>\n\tcode pre {\n\t\toverflow-x: auto;\n\t\tcolor: var(--body-text-color);\n\t\tfont-family: var(--font-mono);\n\t\ttab-size: 2;\n\t}\n\n\t.token.string {\n\t\tdisplay: contents;\n\t\tcolor: var(--color-accent-base);\n\t}\n\n\tcode {\n\t\tposition: relative;\n\t\tdisplay: block;\n\t}\n\n\t.copy {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tmargin-top: -5px;\n\t\tmargin-right: -5px;\n\t}\n\n\t.container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: var(--spacing-xxl);\n\t\tmargin-top: var(--size-3);\n\t\tmargin-bottom: var(--size-3);\n\t}\n\n\t.desc {\n\t\tcolor: var(--body-text-color-subdued);\n\t}\n\n\t.api-name {\n\t\tcolor: var(--color-accent);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport type { Dependency, Payload } from \"../types\";\n\timport CopyButton from \"./CopyButton.svelte\";\n\timport { Block } from \"@gradio/atoms\";\n\timport { represent_value } from \"./utils\";\n\timport { onMount, tick } from \"svelte\";\n\n\texport let dependencies: Dependency[];\n\texport let short_root: string;\n\texport let root: string;\n\texport let api_prefix = \"\";\n\texport let current_language: \"python\" | \"javascript\" | \"bash\" | \"mcp\";\n\texport let username: string | null;\n\n\tlet python_code: HTMLElement;\n\tlet python_code_text: string;\n\tlet js_code: HTMLElement;\n\tlet bash_code: HTMLElement;\n\n\texport let api_calls: Payload[] = [];\n\n\tasync function get_info(): Promise<{\n\t\tnamed_endpoints: any;\n\t\tunnamed_endpoints: any;\n\t}> {\n\t\tlet response = await fetch(\n\t\t\troot.replace(/\\/$/, \"\") + api_prefix + \"/info/?all_endpoints=true\"\n\t\t);\n\t\tlet data = await response.json();\n\t\treturn data;\n\t}\n\n\tlet endpoints_info: any;\n\tlet py_zipped: { call: string; api_name: string }[] = [];\n\tlet js_zipped: { call: string; api_name: string }[] = [];\n\tlet bash_zipped: { call: string; api_name: string }[] = [];\n\n\tfunction format_api_call(call: Payload, lang: \"py\" | \"js\" | \"bash\"): string {\n\t\tconst api_name = `/${dependencies[call.fn_index].api_name}`;\n\t\t// If an input is undefined (distinct from null) then it corresponds to a State component.\n\t\tlet call_data_excluding_state = call.data.filter(\n\t\t\t(d) => typeof d !== \"undefined\"\n\t\t);\n\n\t\tconst params = call_data_excluding_state\n\t\t\t.map((param, index) => {\n\t\t\t\tif (endpoints_info[api_name]) {\n\t\t\t\t\tconst param_info = endpoints_info[api_name].parameters[index];\n\t\t\t\t\tif (!param_info) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tconst param_name = param_info.parameter_name;\n\t\t\t\t\tconst python_type = param_info.python_type.type;\n\t\t\t\t\tif (lang === \"py\") {\n\t\t\t\t\t\treturn `  ${param_name}=${represent_value(\n\t\t\t\t\t\t\tparam as string,\n\t\t\t\t\t\t\tpython_type,\n\t\t\t\t\t\t\t\"py\"\n\t\t\t\t\t\t)}`;\n\t\t\t\t\t} else if (lang === \"js\") {\n\t\t\t\t\t\treturn `    ${param_name}: ${represent_value(\n\t\t\t\t\t\t\tparam as string,\n\t\t\t\t\t\t\tpython_type,\n\t\t\t\t\t\t\t\"js\"\n\t\t\t\t\t\t)}`;\n\t\t\t\t\t} else if (lang === \"bash\") {\n\t\t\t\t\t\treturn `    ${represent_value(\n\t\t\t\t\t\t\tparam as string,\n\t\t\t\t\t\t\tpython_type,\n\t\t\t\t\t\t\t\"bash\"\n\t\t\t\t\t\t)}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn `  ${represent_value(param as string, undefined, lang)}`;\n\t\t\t})\n\t\t\t.filter((d) => typeof d !== \"undefined\")\n\t\t\t.join(\",\\n\");\n\t\tif (params) {\n\t\t\tif (lang === \"py\") {\n\t\t\t\treturn `${params},\\n`;\n\t\t\t} else if (lang === \"js\") {\n\t\t\t\treturn `{\\n${params},\\n}`;\n\t\t\t} else if (lang === \"bash\") {\n\t\t\t\treturn `\\n${params}\\n`;\n\t\t\t}\n\t\t}\n\t\tif (lang === \"py\") {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn \"\\n\";\n\t}\n\n\tonMount(async () => {\n\t\tconst data = await get_info();\n\t\tendpoints_info = data[\"named_endpoints\"];\n\t\tlet py_api_calls: string[] = api_calls.map((call) =>\n\t\t\tformat_api_call(call, \"py\")\n\t\t);\n\t\tlet js_api_calls: string[] = api_calls.map((call) =>\n\t\t\tformat_api_call(call, \"js\")\n\t\t);\n\t\tlet bash_api_calls: string[] = api_calls.map((call) =>\n\t\t\tformat_api_call(call, \"bash\")\n\t\t);\n\t\tlet api_names: string[] = api_calls.map(\n\t\t\t(call) => dependencies[call.fn_index].api_name || \"\"\n\t\t);\n\t\tpy_zipped = py_api_calls.map((call, index) => ({\n\t\t\tcall,\n\t\t\tapi_name: api_names[index]\n\t\t}));\n\t\tjs_zipped = js_api_calls.map((call, index) => ({\n\t\t\tcall,\n\t\t\tapi_name: api_names[index]\n\t\t}));\n\t\tbash_zipped = bash_api_calls.map((call, index) => ({\n\t\t\tcall,\n\t\t\tapi_name: api_names[index]\n\t\t}));\n\n\t\tawait tick();\n\n\t\tpython_code_text = python_code.innerText;\n\t});\n</script>\n\n<div class=\"container\">\n\t<!-- <EndpointDetail {named} api_name={dependency.api_name} /> -->\n\t<Block border_mode={\"focus\"}>\n\t\t{#if current_language === \"python\"}\n\t\t\t<code>\n\t\t\t\t<div class=\"copy\">\n\t\t\t\t\t<CopyButton code={python_code_text} />\n\t\t\t\t</div>\n\t\t\t\t<div bind:this={python_code}>\n\t\t\t\t\t<pre><span class=\"highlight\">from</span> gradio_client <span\n\t\t\t\t\t\t\tclass=\"highlight\">import</span\n\t\t\t\t\t\t> Client, file\n\nclient = Client(<span class=\"token string\">\"{short_root}\"</span\n\t\t\t\t\t\t>{#if username !== null}, auth=(\"{username}\", **password**){/if})\n{#each py_zipped as { call, api_name }}<!--\n-->\nclient.<span class=\"highlight\"\n\t\t\t\t\t\t\t\t>predict(\n{call}  api_name=<span class=\"api-name\">\"/{api_name}\"</span>\n)\n</span>{/each}</pre>\n\t\t\t\t</div>\n\t\t\t</code>\n\t\t{:else if current_language === \"javascript\"}\n\t\t\t<code>\n\t\t\t\t<div class=\"copy\">\n\t\t\t\t\t<CopyButton code={js_code?.innerText} />\n\t\t\t\t</div>\n\t\t\t\t<div bind:this={js_code}>\n\t\t\t\t\t<pre>import &lbrace; Client &rbrace; from \"@gradio/client\";\n\nconst app = await Client.connect(<span class=\"token string\">\"{short_root}\"</span\n\t\t\t\t\t\t>{#if username !== null}, &lbrace;auth: [\"{username}\", **password**]&rbrace;{/if});\n\t\t\t\t\t{#each js_zipped as { call, api_name }}<!--\n\t\t\t\t\t-->\nawait client.predict(<span\n\t\t\t\t\t\t\t\tclass=\"api-name\">\n  \"/{api_name}\"</span\n\t\t\t\t\t\t\t>{#if call}, {call}{/if});\n\t\t\t\t\t\t{/each}</pre>\n\t\t\t\t</div>\n\t\t\t</code>\n\t\t{:else if current_language === \"bash\"}\n\t\t\t<code>\n\t\t\t\t<div class=\"copy\">\n\t\t\t\t\t<CopyButton code={bash_code?.innerText} />\n\t\t\t\t</div>\n\t\t\t\t<div bind:this={bash_code}>\n\t\t\t\t\t{#each bash_zipped as { call, api_name }}\n\t\t\t\t\t\t<pre>curl -X POST {short_root}call/{api_name} -s -H \"Content-Type: application/json\" -d '{\"{\"} \n\t\"data\": [{call}]{\"}\"}' \\\n  | awk -F'\"' '{\"{\"} print $4{\"}\"}' \\\n  | read EVENT_ID; curl -N {short_root}call/{api_name}/$EVENT_ID</pre>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t</code>\n\t\t{/if}\n\t</Block>\n</div>\n\n<style>\n\tcode pre {\n\t\toverflow-x: auto;\n\t\tcolor: var(--body-text-color);\n\t\tfont-family: var(--font-mono);\n\t\ttab-size: 2;\n\t}\n\n\t.token.string {\n\t\tdisplay: contents;\n\t\tcolor: var(--color-accent-base);\n\t}\n\n\tcode {\n\t\tposition: relative;\n\t\tdisplay: block;\n\t}\n\n\t.copy {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tmargin-top: -5px;\n\t\tmargin-right: -5px;\n\t}\n\n\t.container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: var(--spacing-xxl);\n\t\tmargin-top: var(--size-3);\n\t\tmargin-bottom: var(--size-3);\n\t}\n\n\t.api-name {\n\t\tcolor: var(--color-accent);\n\t}\n</style>\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20aria-hidden='true'%20focusable='false'%20role='img'%20width='1em'%20height='1em'%20preserveAspectRatio='xMidYMid%20meet'%20viewBox='0%200%2032%2032'%20%3e%3cpath%20d='M15.84.5a16.4,16.4,0,0,0-3.57.32C9.1,1.39,8.53,2.53,8.53,4.64V7.48H16v1H5.77a4.73,4.73,0,0,0-4.7,3.74,14.82,14.82,0,0,0,0,7.54c.57,2.28,1.86,3.82,4,3.82h2.6V20.14a4.73,4.73,0,0,1,4.63-4.63h7.38a3.72,3.72,0,0,0,3.73-3.73V4.64A4.16,4.16,0,0,0,19.65.82,20.49,20.49,0,0,0,15.84.5ZM11.78,2.77a1.39,1.39,0,0,1,1.38,1.46,1.37,1.37,0,0,1-1.38,1.38A1.42,1.42,0,0,1,10.4,4.23,1.44,1.44,0,0,1,11.78,2.77Z'%20fill='%235a9fd4'%20%3e%3c/path%3e%3cpath%20d='M16.16,31.5a16.4,16.4,0,0,0,3.57-.32c3.17-.57,3.74-1.71,3.74-3.82V24.52H16v-1H26.23a4.73,4.73,0,0,0,4.7-3.74,14.82,14.82,0,0,0,0-7.54c-.57-2.28-1.86-3.82-4-3.82h-2.6v3.41a4.73,4.73,0,0,1-4.63,4.63H12.35a3.72,3.72,0,0,0-3.73,3.73v7.14a4.16,4.16,0,0,0,3.73,3.82A20.49,20.49,0,0,0,16.16,31.5Zm4.06-2.27a1.39,1.39,0,0,1-1.38-1.46,1.37,1.37,0,0,1,1.38-1.38,1.42,1.42,0,0,1,1.38,1.38A1.44,1.44,0,0,1,20.22,29.23Z'%20fill='%23ffd43b'%20%3e%3c/path%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20aria-hidden='true'%20focusable='false'%20role='img'%20width='1em'%20height='1em'%20preserveAspectRatio='xMidYMid%20meet'%20viewBox='0%200%2032%2032'%20%3e%3crect%20width='32'%20height='32'%20fill='%23f7df1e'%3e%3c/rect%3e%3cpath%20d='M21.5,25a3.27,3.27,0,0,0,3,1.83c1.25,0,2-.63,2-1.49,0-1-.81-1.39-2.19-2L23.56,23C21.39,22.1,20,20.94,20,18.49c0-2.25,1.72-4,4.41-4a4.44,4.44,0,0,1,4.27,2.41l-2.34,1.5a2,2,0,0,0-1.93-1.29,1.31,1.31,0,0,0-1.44,1.29c0,.9.56,1.27,1.85,1.83l.75.32c2.55,1.1,4,2.21,4,4.72,0,2.71-2.12,4.19-5,4.19a5.78,5.78,0,0,1-5.48-3.07Zm-10.63.26c.48.84.91,1.55,1.94,1.55s1.61-.39,1.61-1.89V14.69h3V25c0,3.11-1.83,4.53-4.49,4.53a4.66,4.66,0,0,1-4.51-2.75Z'%20%3e%3c/path%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20version='1.1'%20id='Layer_1'%20x='0px'%20y='0px'%20viewBox='0%200%20150%20150'%20style='enable-background:new%200%200%20150%20150;%20background-color:%20%2372a824;'%20xml:space='preserve'%3e%3cscript%20xmlns=''/%3e%3cstyle%20type='text/css'%3e%20.st0{fill:%23FFFFFF;}%20%3c/style%3e%3cg%3e%3cpath%20class='st0'%20d='M118.9,40.3L81.7,18.2c-2.2-1.3-4.7-2-7.2-2s-5,0.7-7.2,2L30.1,40.3c-4.4,2.6-7.2,7.5-7.2,12.8v44.2%20c0,5.3,2.7,10.1,7.2,12.8l37.2,22.1c2.2,1.3,4.7,2,7.2,2c2.5,0,5-0.7,7.2-2l37.2-22.1c4.4-2.6,7.2-7.5,7.2-12.8V53%20C126.1,47.8,123.4,42.9,118.9,40.3z%20M90.1,109.3l0.1,3.2c0,0.4-0.2,0.8-0.5,1l-1.9,1.1c-0.3,0.2-0.5,0-0.6-0.4l0-3.1%20c-1.6,0.7-3.2,0.8-4.3,0.4c-0.2-0.1-0.3-0.4-0.2-0.7l0.7-2.9c0.1-0.2,0.2-0.5,0.3-0.6c0.1-0.1,0.1-0.1,0.2-0.1%20c0.1-0.1,0.2-0.1,0.3,0c1.1,0.4,2.6,0.2,3.9-0.5c1.8-0.9,2.9-2.7,2.9-4.5c0-1.6-0.9-2.3-3-2.3c-2.7,0-5.2-0.5-5.3-4.5%20c0-3.3,1.7-6.7,4.4-8.8l0-3.2c0-0.4,0.2-0.8,0.5-1l1.8-1.2c0.3-0.2,0.5,0,0.6,0.4l0,3.2c1.3-0.5,2.5-0.7,3.6-0.4%20c0.2,0.1,0.3,0.4,0.2,0.7l-0.7,2.8c-0.1,0.2-0.2,0.4-0.3,0.6c-0.1,0.1-0.1,0.1-0.2,0.1c-0.1,0-0.2,0.1-0.3,0%20c-0.5-0.1-1.6-0.4-3.4,0.6c-1.9,1-2.6,2.6-2.5,3.8c0,1.5,0.8,1.9,3.3,1.9c3.4,0.1,4.9,1.6,5,5C94.7,103.4,92.9,107,90.1,109.3z%20M109.6,103.9c0,0.3,0,0.6-0.3,0.7l-9.4,5.7c-0.2,0.1-0.4,0-0.4-0.3v-2.4c0-0.3,0.2-0.5,0.4-0.6l9.3-5.5c0.2-0.1,0.4,0,0.4,0.3%20V103.9z%20M116.1,49.6L80.9,71.3c-4.4,2.6-7.6,5.4-7.6,10.7v43.4c0,3.2,1.3,5.2,3.2,5.8c-0.6,0.1-1.3,0.2-2,0.2%20c-2.1,0-4.1-0.6-5.9-1.6l-37.2-22.1c-3.6-2.2-5.9-6.2-5.9-10.5V53c0-4.3,2.3-8.4,5.9-10.5l37.2-22.1c1.8-1.1,3.8-1.6,5.9-1.6%20s4.1,0.6,5.9,1.6l37.2,22.1c3.1,1.8,5.1,5,5.7,8.5C122.1,48.4,119.3,47.7,116.1,49.6z'/%3e%3c/g%3e%3c/svg%3e\"","<script lang=\"ts\">\n\timport { Loader } from \"@gradio/statustracker\";\n\n\texport let is_running: boolean;\n\texport let endpoint_returns: any;\n\texport let js_returns: any;\n\texport let current_language: \"python\" | \"javascript\" | \"bash\";\n</script>\n\n<h4>\n\t<div class=\"toggle-icon\">\n\t\t<div class=\"toggle-dot toggle-right\" />\n\t</div>\n\tReturns {#if endpoint_returns.length > 1}\n\t\t{current_language == \"python\" ? \"tuple\" : \"list\"} of {endpoint_returns.length}\n\t\telements{:else}\n\t\t1 element{/if}\n</h4>\n\n<div class:hide={is_running}>\n\t{#each endpoint_returns as { label, type, python_type, component, serializer }, i}\n\t\t<hr class=\"hr\" />\n\t\t<div style=\"margin:10px;\">\n\t\t\t<p>\n\t\t\t\t{#if endpoint_returns.length > 1}\n\t\t\t\t\t<span class=\"code\">[{i}]</span>\n\t\t\t\t{/if}\n\t\t\t\t<span class=\"code highlight\"\n\t\t\t\t\t>{#if current_language === \"python\"}{python_type.type}{:else}{js_returns[\n\t\t\t\t\t\t\ti\n\t\t\t\t\t\t].type}{/if}</span\n\t\t\t\t>\n\t\t\t</p>\n\t\t\t<p class=\"desc\">\n\t\t\t\tThe output value that appears in the \"{label}\" <!--\n\t-->{component}\n\t\t\t\tcomponent<!--\n\t-->.\n\t\t\t</p>\n\t\t</div>\n\t{/each}\n</div>\n{#if is_running}\n\t<div class=\"load-wrap\">\n\t\t<Loader margin={false} />\n\t</div>\n{/if}\n\n<style>\n\t.hr {\n\t\tborder: 0;\n\t\theight: 1px;\n\t\tbackground: var(--color-accent-soft);\n\t}\n\t.code {\n\t\tfont-family: var(--font-mono);\n\t\tmargin-right: 10px;\n\t}\n\n\t.highlight {\n\t\tbackground: var(--color-accent-soft);\n\t\tcolor: var(--color-accent);\n\t\tpadding: var(--size-1);\n\t}\n\n\t.desc {\n\t\tcolor: var(--body-text-color-subdued);\n\t\tfont-size: var(--text-lg);\n\t}\n\n\th4 {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-top: var(--size-6);\n\t\tmargin-bottom: var(--size-3);\n\t\tcolor: var(--body-text-color);\n\t\tfont-weight: var(--weight-bold);\n\t}\n\n\t.toggle-icon {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-right: var(--size-2);\n\t\tborder-radius: var(--radius-full);\n\t\tbackground: var(--color-grey-300);\n\t\twidth: 12px;\n\t\theight: 4px;\n\t}\n\n\t.toggle-dot {\n\t\tborder-radius: var(--radius-full);\n\t\tbackground: var(--color-grey-700);\n\t\twidth: 6px;\n\t\theight: 6px;\n\t\tmargin-left: auto;\n\t}\n</style>\n","export default \"__VITE_ASSET__CKRBDa1e__\"","<script lang=\"ts\">\n\t/* eslint-disable */\n\timport { onMount, createEventDispatcher } from \"svelte\";\n\timport type { ComponentMeta, Dependency } from \"../types\";\n\timport NoApi from \"./NoApi.svelte\";\n\timport type { Client } from \"@gradio/client\";\n\timport type { Payload } from \"../types\";\n\n\timport ApiBanner from \"./ApiBanner.svelte\";\n\timport { BaseButton as Button } from \"@gradio/button\";\n\timport ParametersSnippet from \"./ParametersSnippet.svelte\";\n\timport InstallSnippet from \"./InstallSnippet.svelte\";\n\timport CodeSnippet from \"./CodeSnippet.svelte\";\n\timport RecordingSnippet from \"./RecordingSnippet.svelte\";\n\timport CopyButton from \"./CopyButton.svelte\";\n\timport { Block } from \"@gradio/atoms\";\n\n\timport python from \"./img/python.svg\";\n\timport javascript from \"./img/javascript.svg\";\n\timport bash from \"./img/bash.svg\";\n\timport ResponseSnippet from \"./ResponseSnippet.svelte\";\n\timport mcp from \"./img/mcp.svg\";\n\n\texport let dependencies: Dependency[];\n\texport let root: string;\n\texport let app: Awaited<ReturnType<typeof Client.connect>>;\n\texport let space_id: string | null;\n\texport let root_node: ComponentMeta;\n\texport let username: string | null;\n\n\tconst js_docs =\n\t\t\"https://www.gradio.app/guides/getting-started-with-the-js-client\";\n\tconst py_docs =\n\t\t\"https://www.gradio.app/guides/getting-started-with-the-python-client\";\n\tconst bash_docs =\n\t\t\"https://www.gradio.app/guides/querying-gradio-apps-with-curl\";\n\tconst spaces_docs_suffix = \"#connecting-to-a-hugging-face-space\";\n\tconst mcp_docs =\n\t\t\"https://www.gradio.app/guides/building-mcp-server-with-gradio\";\n\n\tlet api_count = dependencies.filter(\n\t\t(dependency) => dependency.show_api\n\t).length;\n\n\tif (root === \"\") {\n\t\troot = location.protocol + \"//\" + location.host + location.pathname;\n\t}\n\tif (!root.endsWith(\"/\")) {\n\t\troot += \"/\";\n\t}\n\n\texport let api_calls: Payload[] = [];\n\tlet current_language: \"python\" | \"javascript\" | \"bash\" | \"mcp\" = \"python\";\n\n\tconst langs = [\n\t\t[\"python\", \"Python\", python],\n\t\t[\"javascript\", \"JavaScript\", javascript],\n\t\t[\"bash\", \"cURL\", bash],\n\t\t[\"mcp\", \"MCP\", mcp]\n\t] as const;\n\n\tlet is_running = false;\n\tlet mcp_server_active = false;\n\n\tasync function get_info(): Promise<{\n\t\tnamed_endpoints: any;\n\t\tunnamed_endpoints: any;\n\t}> {\n\t\tlet response = await fetch(\n\t\t\troot.replace(/\\/$/, \"\") + app.api_prefix + \"/info\"\n\t\t);\n\t\tlet data = await response.json();\n\t\treturn data;\n\t}\n\tasync function get_js_info(): Promise<Record<string, any>> {\n\t\tlet js_api_info = await app.view_api();\n\t\treturn js_api_info;\n\t}\n\n\tlet info: {\n\t\tnamed_endpoints: any;\n\t\tunnamed_endpoints: any;\n\t};\n\n\tlet js_info: Record<string, any>;\n\n\tget_info().then((data) => {\n\t\tinfo = data;\n\t});\n\n\tget_js_info().then((js_api_info) => {\n\t\tjs_info = js_api_info;\n\t});\n\n\tconst dispatch = createEventDispatcher();\n\n\tconst mcp_server_url = `${root}gradio_api/mcp/sse`;\n\n\tinterface ToolParameter {\n\t\ttitle?: string;\n\t\ttype: string;\n\t\tdescription: string;\n\t\tformat?: string;\n\t\tdefault?: any;\n\t}\n\n\tinterface Tool {\n\t\tname: string;\n\t\tdescription: string;\n\t\tparameters: Record<string, ToolParameter>;\n\t\texpanded?: boolean;\n\t}\n\n\tlet tools: Tool[] = [];\n\tlet headers: string[] = [];\n\tlet mcp_json_sse: any;\n\tlet mcp_json_stdio: any;\n\tlet file_data_present = false;\n\n\tconst upload_file_mcp_server = {\n\t\tcommand: \"uvx\",\n\t\targs: [\n\t\t\t\"--from\",\n\t\t\t\"gradio[mcp]\",\n\t\t\t\"gradio\",\n\t\t\t\"upload-mcp\",\n\t\t\troot,\n\t\t\t\"<UPLOAD_DIRECTORY>\"\n\t\t]\n\t};\n\n\tasync function fetchMcpTools() {\n\t\ttry {\n\t\t\tconst response = await fetch(`${root}gradio_api/mcp/schema`);\n\t\t\tconst schema = await response.json();\n\t\t\tfile_data_present = schema\n\t\t\t\t.map((tool: any) => tool.meta?.file_data_present)\n\t\t\t\t.some((present: boolean) => present);\n\n\t\t\ttools = schema.map((tool: any) => ({\n\t\t\t\tname: tool.name,\n\t\t\t\tdescription: tool.description || \"\",\n\t\t\t\tparameters: tool.inputSchema?.properties || {},\n\t\t\t\texpanded: false\n\t\t\t}));\n\t\t\theaders = schema.map((tool: any) => tool.meta?.headers || []).flat();\n\t\t\tif (headers.length > 0) {\n\t\t\t\tmcp_json_sse = {\n\t\t\t\t\tmcpServers: {\n\t\t\t\t\t\tgradio: {\n\t\t\t\t\t\t\turl: mcp_server_url,\n\t\t\t\t\t\t\theaders: headers.reduce((accumulator, current_key) => {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\taccumulator[current_key] = \"<YOUR_HEADER_VALUE>\";\n\t\t\t\t\t\t\t\treturn accumulator;\n\t\t\t\t\t\t\t}, {})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tmcp_json_stdio = {\n\t\t\t\t\tmcpServers: {\n\t\t\t\t\t\tgradio: {\n\t\t\t\t\t\t\tcommand: \"npx\",\n\t\t\t\t\t\t\targs: [\n\t\t\t\t\t\t\t\t\"mcp-remote\",\n\t\t\t\t\t\t\t\tmcp_server_url,\n\t\t\t\t\t\t\t\t\"--transport\",\n\t\t\t\t\t\t\t\t\"sse-only\",\n\t\t\t\t\t\t\t\t...headers\n\t\t\t\t\t\t\t\t\t.map((header) => [\n\t\t\t\t\t\t\t\t\t\t\"--header\",\n\t\t\t\t\t\t\t\t\t\t`${header}: <YOUR_HEADER_VALUE>`\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t.flat()\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tmcp_json_sse = {\n\t\t\t\t\tmcpServers: {\n\t\t\t\t\t\tgradio: {\n\t\t\t\t\t\t\turl: mcp_server_url\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tmcp_json_stdio = {\n\t\t\t\t\tmcpServers: {\n\t\t\t\t\t\tgradio: {\n\t\t\t\t\t\t\tcommand: \"npx\",\n\t\t\t\t\t\t\targs: [\"mcp-remote\", mcp_server_url, \"--transport\", \"sse-only\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (file_data_present) {\n\t\t\t\t\tmcp_json_sse.mcpServers.upload_files_to_gradio =\n\t\t\t\t\t\tupload_file_mcp_server;\n\t\t\t\t\tmcp_json_stdio.mcpServers.upload_files_to_gradio =\n\t\t\t\t\t\tupload_file_mcp_server;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Failed to fetch MCP tools:\", error);\n\t\t\ttools = [];\n\t\t}\n\t}\n\n\tonMount(() => {\n\t\tdocument.body.style.overflow = \"hidden\";\n\t\tif (\"parentIFrame\" in window) {\n\t\t\twindow.parentIFrame?.scrollTo(0, 0);\n\t\t}\n\n\t\t// Check MCP server status and fetch tools if active\n\t\tfetch(mcp_server_url)\n\t\t\t.then((response) => {\n\t\t\t\tmcp_server_active = response.ok;\n\t\t\t\tif (mcp_server_active) {\n\t\t\t\t\tfetchMcpTools();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tmcp_server_active = false;\n\t\t\t});\n\n\t\treturn () => {\n\t\t\tdocument.body.style.overflow = \"auto\";\n\t\t};\n\t});\n</script>\n\n{#if info}\n\t{#if api_count}\n\t\t<div class=\"banner-wrap\">\n\t\t\t<ApiBanner\n\t\t\t\ton:close\n\t\t\t\troot={space_id || root}\n\t\t\t\t{api_count}\n\t\t\t\t{current_language}\n\t\t\t/>\n\t\t</div>\n\n\t\t<div class=\"docs-wrap\">\n\t\t\t<div class=\"client-doc\">\n\t\t\t\t<p style=\"font-size: var(--text-lg);\">\n\t\t\t\t\tChoose one of the following ways to interact with the API.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div class=\"endpoint\">\n\t\t\t\t<div class=\"snippets\">\n\t\t\t\t\t{#each langs as [language, display_name, img]}\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclass=\"snippet\n\t\t\t\t\t\t{current_language === language ? 'current-lang' : 'inactive-lang'}\"\n\t\t\t\t\t\t\ton:click={() => (current_language = language)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img src={img} alt=\"\" />\n\t\t\t\t\t\t\t{display_name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t\t{#if api_calls.length}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tid=\"num-recorded-api-calls\"\n\t\t\t\t\t\t\tstyle=\"font-size: var(--text-lg); font-weight:bold; margin: 10px 0px;\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t🪄 Recorded API Calls <span class=\"api-count\"\n\t\t\t\t\t\t\t\t>[{api_calls.length}]</span\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tHere is the code snippet to replay the most recently recorded API\n\t\t\t\t\t\t\tcalls using the {current_language}\n\t\t\t\t\t\t\tclient.\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<RecordingSnippet\n\t\t\t\t\t\t\t{current_language}\n\t\t\t\t\t\t\t{api_calls}\n\t\t\t\t\t\t\t{dependencies}\n\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\tapi_prefix={app.api_prefix}\n\t\t\t\t\t\t\tshort_root={space_id || root}\n\t\t\t\t\t\t\t{username}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tNote: Some API calls only affect the UI, so when using the\n\t\t\t\t\t\t\tclients, the desired result may be achieved with only a subset of\n\t\t\t\t\t\t\tthe recorded calls.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p\n\t\t\t\t\t\tstyle=\"font-size: var(--text-lg); font-weight:bold; margin: 30px 0px 10px;\"\n\t\t\t\t\t>\n\t\t\t\t\t\tAPI Documentation\n\t\t\t\t\t</p>\n\t\t\t\t{:else}\n\t\t\t\t\t<p class=\"padded\">\n\t\t\t\t\t\t{#if current_language == \"python\" || current_language == \"javascript\"}\n\t\t\t\t\t\t\t1. Install the\n\t\t\t\t\t\t\t<span style=\"text-transform:capitalize\">{current_language}</span>\n\t\t\t\t\t\t\tclient (<a\n\t\t\t\t\t\t\t\thref={current_language == \"python\" ? py_docs : js_docs}\n\t\t\t\t\t\t\t\ttarget=\"_blank\">docs</a\n\t\t\t\t\t\t\t>) if you don't already have it installed.\n\t\t\t\t\t\t{:else if current_language == \"mcp\"}\n\t\t\t\t\t\t\t{#if mcp_server_active}\n\t\t\t\t\t\t\t\t<Block>\n\t\t\t\t\t\t\t\t\t<div class=\"mcp-url\">\n\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\t><span class=\"status-indicator active\">●</span>MCP Server\n\t\t\t\t\t\t\t\t\t\t\tURL (SSE)</label\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<div class=\"textbox\">\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" readonly value={mcp_server_url} />\n\t\t\t\t\t\t\t\t\t\t\t<CopyButton code={mcp_server_url} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Block>\n\t\t\t\t\t\t\t\t<p>&nbsp;</p>\n\t\t\t\t\t\t\t\t<strong>Available MCP Tools</strong>\n\t\t\t\t\t\t\t\t<div class=\"mcp-tools\">\n\t\t\t\t\t\t\t\t\t{#each tools as tool}\n\t\t\t\t\t\t\t\t\t\t<div class=\"tool-item\">\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"tool-header\"\n\t\t\t\t\t\t\t\t\t\t\t\ton:click={() => (tool.expanded = !tool.expanded)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\t><span class=\"tool-name\">{tool.name}</span> &nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"tool-description\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>{tool.description\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? tool.description\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"⚠︎ No description provided in function docstring\"}</span\n\t\t\t\t\t\t\t\t\t\t\t\t\t></span\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"tool-arrow\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>{tool.expanded ? \"▼\" : \"▶\"}</span\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t{#if tool.expanded}\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"tool-content\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{#if Object.keys(tool.parameters).length > 0}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"tool-parameters\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{#each Object.entries(tool.parameters) as [name, param]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"parameter\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<code>{name}</code>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"parameter-type\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t({param.type}{param.default !== undefined\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `, default: ${JSON.stringify(param.default)}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p class=\"parameter-description\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{param.description\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? param.description\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"⚠︎ No description for this parameter in function docstring\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>Takes no input parameters</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<p>&nbsp;</p>\n\n\t\t\t\t\t\t\t\t<strong>SSE Transport</strong>: To add this MCP to clients that\n\t\t\t\t\t\t\t\tsupport SSE (e.g. Cursor, Windsurf, Cline), simply add the\n\t\t\t\t\t\t\t\tfollowing configuration to your MCP config.\n\t\t\t\t\t\t\t\t<p>&nbsp;</p>\n\t\t\t\t\t\t\t\t<Block>\n\t\t\t\t\t\t\t\t\t<code>\n\t\t\t\t\t\t\t\t\t\t<div class=\"copy\">\n\t\t\t\t\t\t\t\t\t\t\t<CopyButton\n\t\t\t\t\t\t\t\t\t\t\t\tcode={JSON.stringify(mcp_json_sse, null, 2)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<pre>{JSON.stringify(mcp_json_sse, null, 2)}</pre>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t</Block>\n\t\t\t\t\t\t\t\t{#if file_data_present}\n\t\t\t\t\t\t\t\t\t<p>&nbsp;</p>\n\t\t\t\t\t\t\t\t\t<em>Note about files</em>: Gradio MCP servers that have files\n\t\t\t\t\t\t\t\t\tas inputs need the files as URLs, so the\n\t\t\t\t\t\t\t\t\t<code>upload_files_to_gradio</code>\n\t\t\t\t\t\t\t\t\ttool is included for your convenience. This tool can upload files\n\t\t\t\t\t\t\t\t\tlocated in the specified <code>UPLOAD_DIRECTORY</code>\n\t\t\t\t\t\t\t\t\targument (an absolute path in your local machine) or any of its\n\t\t\t\t\t\t\t\t\tsubdirectories to the Gradio app. You can omit this tool if you\n\t\t\t\t\t\t\t\t\tare fine manually uploading files yourself and providing the URLs.\n\t\t\t\t\t\t\t\t\tBefore using this tool, you must have\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref=\"https://docs.astral.sh/uv/getting-started/installation/\"\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\">uv installed</a\n\t\t\t\t\t\t\t\t\t>.\n\t\t\t\t\t\t\t\t\t<p>&nbsp;</p>\n\t\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t\t<strong>STDIO Transport</strong>: For clients that only support\n\t\t\t\t\t\t\t\tstdio (e.g. Claude Desktop), first\n\t\t\t\t\t\t\t\t<a href=\"https://nodejs.org/en/download/\" target=\"_blank\"\n\t\t\t\t\t\t\t\t\t>install Node.js</a\n\t\t\t\t\t\t\t\t>. Then, you can use the following command:\n\t\t\t\t\t\t\t\t<p>&nbsp;</p>\n\t\t\t\t\t\t\t\t<Block>\n\t\t\t\t\t\t\t\t\t<code>\n\t\t\t\t\t\t\t\t\t\t<div class=\"copy\">\n\t\t\t\t\t\t\t\t\t\t\t<CopyButton\n\t\t\t\t\t\t\t\t\t\t\t\tcode={JSON.stringify(mcp_json_stdio, null, 2)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<pre>{JSON.stringify(mcp_json_stdio, null, 2)}</pre>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t</Block>\n\t\t\t\t\t\t\t\t<p>&nbsp;</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<a href={mcp_docs} target=\"_blank\">\n\t\t\t\t\t\t\t\t\t\tRead more about MCP in the Gradio docs\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\tThis Gradio app can also serve as an MCP server, with an MCP\n\t\t\t\t\t\t\t\ttool corresponding to each API endpoint. To enable this, launch\n\t\t\t\t\t\t\t\tthis Gradio app with <code>.launch(mcp_server=True)</code> or\n\t\t\t\t\t\t\t\tset the <code>GRADIO_MCP_SERVER</code> env variable to\n\t\t\t\t\t\t\t\t<code>\"True\"</code>.\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t1. Confirm that you have cURL installed on your system.\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</p>\n\n\t\t\t\t\t{#if current_language !== \"mcp\"}\n\t\t\t\t\t\t<InstallSnippet {current_language} />\n\n\t\t\t\t\t\t<p class=\"padded\">\n\t\t\t\t\t\t\t2. Find the API endpoint below corresponding to your desired\n\t\t\t\t\t\t\tfunction in the app. Copy the code snippet, replacing the\n\t\t\t\t\t\t\tplaceholder values with your own input data.\n\t\t\t\t\t\t\t{#if space_id}If this is a private Space, you may need to pass\n\t\t\t\t\t\t\t\tyour Hugging Face token as well (<a\n\t\t\t\t\t\t\t\t\thref={current_language == \"python\"\n\t\t\t\t\t\t\t\t\t\t? py_docs + spaces_docs_suffix\n\t\t\t\t\t\t\t\t\t\t: current_language == \"javascript\"\n\t\t\t\t\t\t\t\t\t\t\t? js_docs + spaces_docs_suffix\n\t\t\t\t\t\t\t\t\t\t\t: bash_docs}\n\t\t\t\t\t\t\t\t\tclass=\"underline\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\">read more</a\n\t\t\t\t\t\t\t\t>).{/if}\n\n\t\t\t\t\t\t\tOr use the\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\ton:click={() =>\n\t\t\t\t\t\t\t\t\tdispatch(\"close\", { api_recorder_visible: true })}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div class=\"loading-dot\"></div>\n\t\t\t\t\t\t\t\t<p class=\"self-baseline\">API Recorder</p>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\tto automatically generate your API requests.\n\t\t\t\t\t\t\t{#if current_language == \"bash\"}<br />&nbsp;<br />Making a\n\t\t\t\t\t\t\t\tprediction and getting a result requires\n\t\t\t\t\t\t\t\t<strong>2 requests</strong>: a\n\t\t\t\t\t\t\t\t<code>POST</code>\n\t\t\t\t\t\t\t\tand a <code>GET</code> request. The <code>POST</code> request\n\t\t\t\t\t\t\t\treturns an <code>EVENT_ID</code>, which is used in the second\n\t\t\t\t\t\t\t\t<code>GET</code> request to fetch the results. In these\n\t\t\t\t\t\t\t\tsnippets, we've used <code>awk</code> and <code>read</code> to\n\t\t\t\t\t\t\t\tparse the results, combining these two requests into one command\n\t\t\t\t\t\t\t\tfor ease of use. {#if username !== null}\n\t\t\t\t\t\t\t\t\tNote: connecting to an authenticated app requires an\n\t\t\t\t\t\t\t\t\tadditional request.{/if} See\n\t\t\t\t\t\t\t\t<a href={bash_docs} target=\"_blank\">curl docs</a>.\n\t\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t\t<!-- <span\n\t\t\t\t\t\t\tid=\"api-recorder\"\n\t\t\t\t\t\t\ton:click={() => dispatch(\"close\", { api_recorder_visible: true })}\n\t\t\t\t\t\t\t>🪄 API Recorder</span\n\t\t\t\t\t\t> to automatically generate your API requests! -->\n\t\t\t\t\t\t</p>\n\t\t\t\t\t{/if}\n\t\t\t\t{/if}\n\n\t\t\t\t{#if current_language !== \"mcp\"}\n\t\t\t\t\t{#each dependencies as dependency}\n\t\t\t\t\t\t{#if dependency.show_api && info.named_endpoints[\"/\" + dependency.api_name]}\n\t\t\t\t\t\t\t<div class=\"endpoint-container\">\n\t\t\t\t\t\t\t\t<CodeSnippet\n\t\t\t\t\t\t\t\t\tendpoint_parameters={info.named_endpoints[\n\t\t\t\t\t\t\t\t\t\t\"/\" + dependency.api_name\n\t\t\t\t\t\t\t\t\t].parameters}\n\t\t\t\t\t\t\t\t\t{dependency}\n\t\t\t\t\t\t\t\t\t{current_language}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t\t{space_id}\n\t\t\t\t\t\t\t\t\t{username}\n\t\t\t\t\t\t\t\t\tapi_prefix={app.api_prefix}\n\t\t\t\t\t\t\t\t\tapi_description={info.named_endpoints[\n\t\t\t\t\t\t\t\t\t\t\"/\" + dependency.api_name\n\t\t\t\t\t\t\t\t\t].description}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<ParametersSnippet\n\t\t\t\t\t\t\t\t\tendpoint_returns={info.named_endpoints[\n\t\t\t\t\t\t\t\t\t\t\"/\" + dependency.api_name\n\t\t\t\t\t\t\t\t\t].parameters}\n\t\t\t\t\t\t\t\t\tjs_returns={js_info.named_endpoints[\"/\" + dependency.api_name]\n\t\t\t\t\t\t\t\t\t\t.parameters}\n\t\t\t\t\t\t\t\t\t{is_running}\n\t\t\t\t\t\t\t\t\t{current_language}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<ResponseSnippet\n\t\t\t\t\t\t\t\t\tendpoint_returns={info.named_endpoints[\n\t\t\t\t\t\t\t\t\t\t\"/\" + dependency.api_name\n\t\t\t\t\t\t\t\t\t].returns}\n\t\t\t\t\t\t\t\t\tjs_returns={js_info.named_endpoints[\"/\" + dependency.api_name]\n\t\t\t\t\t\t\t\t\t\t.returns}\n\t\t\t\t\t\t\t\t\t{is_running}\n\t\t\t\t\t\t\t\t\t{current_language}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t{/each}\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\t{:else}\n\t\t<NoApi {root} on:close />\n\t{/if}\n{/if}\n\n<style>\n\t.banner-wrap {\n\t\tposition: relative;\n\t\tborder-bottom: 1px solid var(--border-color-primary);\n\t\tpadding: var(--size-4) var(--size-6);\n\t\tfont-size: var(--text-md);\n\t}\n\n\t@media (--screen-md) {\n\t\t.banner-wrap {\n\t\t\tfont-size: var(--text-xl);\n\t\t}\n\t}\n\n\t.docs-wrap {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: var(--spacing-xxl);\n\t}\n\n\t.endpoint {\n\t\tborder-radius: var(--radius-md);\n\t\tbackground: var(--background-fill-primary);\n\t\tpadding: var(--size-6);\n\t\tpadding-top: var(--size-1);\n\t\tfont-size: var(--text-md);\n\t}\n\n\t.client-doc {\n\t\tpadding-top: var(--size-6);\n\t\tpadding-right: var(--size-6);\n\t\tpadding-left: var(--size-6);\n\t\tfont-size: var(--text-md);\n\t}\n\n\t.library {\n\t\tborder: 1px solid var(--border-color-accent);\n\t\tborder-radius: var(--radius-sm);\n\t\tbackground: var(--color-accent-soft);\n\t\tpadding: 0px var(--size-1);\n\t\tcolor: var(--color-accent);\n\t\tfont-size: var(--text-md);\n\t\ttext-decoration: none;\n\t}\n\n\t.snippets {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-bottom: var(--size-4);\n\t}\n\n\t.snippets > * + * {\n\t\tmargin-left: var(--size-2);\n\t}\n\n\t.snippet {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tborder: 1px solid var(--border-color-primary);\n\n\t\tborder-radius: var(--radius-md);\n\t\tpadding: var(--size-1) var(--size-1-5);\n\t\tcolor: var(--body-text-color-subdued);\n\t\tcolor: var(--body-text-color);\n\t\tline-height: 1;\n\t\tuser-select: none;\n\t}\n\n\t.current-lang {\n\t\tborder: 1px solid var(--body-text-color-subdued);\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.inactive-lang {\n\t\tcursor: pointer;\n\t\tcolor: var(--body-text-color-subdued);\n\t}\n\n\t.inactive-lang:hover,\n\t.inactive-lang:focus {\n\t\tbox-shadow: var(--shadow-drop);\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.snippet img {\n\t\tmargin-right: var(--size-1-5);\n\t\twidth: var(--size-3);\n\t}\n\n\t.header {\n\t\tmargin-top: var(--size-6);\n\t\tfont-size: var(--text-xl);\n\t}\n\n\t.endpoint-container {\n\t\tmargin-top: var(--size-3);\n\t\tmargin-bottom: var(--size-3);\n\t\tborder: 1px solid var(--block-border-color);\n\t\tborder-radius: var(--radius-xl);\n\t\tpadding: var(--size-3);\n\t\tpadding-top: 0;\n\t}\n\n\ta {\n\t\ttext-decoration: underline;\n\t}\n\n\tp.padded {\n\t\tpadding: 15px 0px;\n\t\tfont-size: var(--text-lg);\n\t}\n\n\t#api-recorder {\n\t\tborder: 1px solid var(--color-accent);\n\t\tbackground-color: var(--color-accent-soft);\n\t\tpadding: 0px var(--size-2);\n\t\tborder-radius: var(--size-1);\n\t\tcursor: pointer;\n\t}\n\n\tcode {\n\t\tfont-size: var(--text-md);\n\t}\n\t.loading-dot {\n\t\tposition: relative;\n\t\tleft: -9999px;\n\t\twidth: 10px;\n\t\theight: 10px;\n\t\tborder-radius: 5px;\n\t\tbackground-color: #fd7b00;\n\t\tcolor: #fd7b00;\n\t\tbox-shadow: 9999px 0 0 -1px;\n\t\tmargin-right: 0.25rem;\n\t}\n\t:global(.docs-wrap .sm.secondary) {\n\t\tpadding-top: 1px;\n\t\tpadding-bottom: 1px;\n\t}\n\t.self-baseline {\n\t\talign-self: baseline;\n\t}\n\t.api-count {\n\t\tfont-weight: bold;\n\t\tcolor: #fd7b00;\n\t\talign-self: baseline;\n\t\tfont-family: var(--font-mono);\n\t\tfont-size: var(--text-md);\n\t}\n\n\tcode pre {\n\t\toverflow-x: auto;\n\t\tcolor: var(--body-text-color);\n\t\tfont-family: var(--font-mono);\n\t\ttab-size: 2;\n\t}\n\n\t.token.string {\n\t\tdisplay: contents;\n\t\tcolor: var(--color-accent-base);\n\t}\n\n\t.copy {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tmargin-top: 5px;\n\t\tmargin-right: 5px;\n\t\tz-index: 10;\n\t}\n\n\t.container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: var(--spacing-xxl);\n\t\tmargin-top: var(--size-3);\n\t\tmargin-bottom: var(--size-3);\n\t}\n\n\t.desc {\n\t\tcolor: var(--body-text-color-subdued);\n\t}\n\n\t.api-name {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t.mcp-url {\n\t\tpadding: var(--size-2);\n\t\tposition: relative;\n\t}\n\n\t.mcp-url label {\n\t\tdisplay: block;\n\t\tmargin-bottom: var(--size-2);\n\t\tfont-weight: 600;\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.mcp-url .textbox {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: var(--size-2);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--radius-sm);\n\t\tpadding: var(--size-2);\n\t\tbackground: var(--background-fill-primary);\n\t}\n\n\t.mcp-url input {\n\t\tflex: 1;\n\t\tborder: none;\n\t\tbackground: none;\n\t\tcolor: var(--body-text-color);\n\t\tfont-family: var(--font-mono);\n\t\tfont-size: var(--text-md);\n\t\twidth: 100%;\n\t}\n\n\t.mcp-url input:focus {\n\t\toutline: none;\n\t}\n\n\t.status-indicator {\n\t\tdisplay: inline-block;\n\t\tmargin-right: var(--size-1-5);\n\t\tposition: relative;\n\t\ttop: -1px;\n\t\tfont-size: 0.8em;\n\t}\n\n\t.status-indicator.active {\n\t\tcolor: #4caf50;\n\t\tanimation: pulse 1s infinite;\n\t}\n\n\t@keyframes pulse {\n\t\t0% {\n\t\t\topacity: 1;\n\t\t}\n\t\t50% {\n\t\t\topacity: 0.6;\n\t\t}\n\t\t100% {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\n\t.mcp-tools {\n\t\tmargin-top: var(--size-4);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--radius-md);\n\t\toverflow: hidden;\n\t}\n\n\t.tool-item {\n\t\tborder-bottom: 1px solid var(--border-color-primary);\n\t}\n\n\t.tool-item:last-child {\n\t\tborder-bottom: none;\n\t}\n\n\t.tool-header {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: var(--size-3);\n\t\tbackground: var(--background-fill-primary);\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\ttext-align: left;\n\t}\n\n\t.tool-header:hover {\n\t\tbackground: var(--background-fill-secondary);\n\t}\n\n\t.tool-name {\n\t\tfont-family: var(--font-mono);\n\t\tfont-weight: 600;\n\t}\n\n\t.tool-arrow {\n\t\tcolor: var(--body-text-color-subdued);\n\t}\n\n\t.tool-content {\n\t\tpadding: var(--size-3);\n\t\tbackground: var(--background-fill-secondary);\n\t}\n\n\t.tool-description {\n\t\tmargin-bottom: var(--size-3);\n\t\tcolor: var(--body-text-color);\n\t}\n\t.parameter {\n\t\tmargin-bottom: var(--size-2);\n\t\tpadding: var(--size-2);\n\t\tbackground: var(--background-fill-primary);\n\t\tborder-radius: var(--radius-sm);\n\t}\n\n\t.parameter code {\n\t\tfont-weight: 600;\n\t\tcolor: var(--color-accent);\n\t}\n\n\t.parameter-type {\n\t\tcolor: var(--body-text-color-subdued);\n\t\tmargin-left: var(--size-1);\n\t}\n\n\t.parameter-description {\n\t\tmargin-top: var(--size-1);\n\t\tcolor: var(--body-text-color);\n\t}\n</style>\n"],"names":["ctx","insert","target","div","anchor","append","h1","p0","code0","p1","button","dispatch","createEventDispatcher","root","$$props","click_handler","p","if_block0","create_if_block_2","create_if_block_1","if_block2","create_if_block","api_logo","attr","img","img_src_value","h2","div1","div0","span1","span0","br","api_count","current_language","click_handler_1","represent_value","value","type","lang","simplify_file_data","replace_file_data_with_file_function","stringify_except_file_function","is_potentially_nested_file_data","obj","key","item","index","jsonString","regex","match","regexNone","t_value","dirty","set_data","create_if_block_3","t1_value","t1","span","t10_value","hr","t6","t6_value","t8","t8_value","t10","create_if_block_4","i","h4","div2","current","is_running","endpoint_returns","js_returns","code","copy_text","copy","bash_install","pre","js_install","py_install","h3","api_name","description","if_block","create_if_block_7","t5_value","t19_value","copybutton_changes","t5","t19","t3_value","t3","t4_value","create_if_block_5","t4","t7_value","t14_value","if_block1","span2","span3","span4","span5","t7","t14","endpointdetail_changes","dependency","api_prefix","space_id","endpoint_parameters","username","api_description","python_code","js_code","bash_post_code","has_file_path","param","blob_components","blob_examples","$$value","$$invalidate","normalised_api_prefix","normalised_root","onMount","tick","t17","t17_value","t2","t2_value","dependencies","short_root","python_code_text","bash_code","api_calls","get_info","endpoints_info","py_zipped","js_zipped","bash_zipped","format_api_call","call","params","d","param_info","param_name","python_type","py_api_calls","js_api_calls","bash_api_calls","api_names","python","javascript","bash","t0_value","t0","mcp","div4","div3","apibanner_changes","img_1","img_1_src_value","li","li_class_value","p2","p3","recordingsnippet_changes","a","a_href_value","py_docs","js_docs","code1","code2","create_if_block_12","mcp_docs","strong0","strong1","strong2","a0","p4","p5","a1","label","input","each_value_2","ensure_array_like","create_if_block_13","em","create_if_block_8","create_if_block_6","spaces_docs_suffix","bash_docs","br0","br1","strong","code3","code4","code5","code6","each_blocks","codesnippet_changes","app","root_node","langs","mcp_server_active","get_js_info","info","js_info","data","js_api_info","mcp_server_url","tools","headers","mcp_json_sse","mcp_json_stdio","file_data_present","upload_file_mcp_server","fetchMcpTools","schema","tool","present","accumulator","current_key","header","error","response","language","click_handler_2"],"mappings":"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"}