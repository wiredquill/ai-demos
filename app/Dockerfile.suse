# fleet/Dockerfile.suse
# Base image: SUSE BCI Python
# Using Python 3.11 as an example; adjust version as needed.
FROM registry.suse.com/bci/python:3.11

RUN zypper ref && zypper install -y bash git

LABEL maintainer="your-email@example.com"
LABEL version="1.0-suse"
LABEL description="SUSE version of the application with Ollama."

# Set the working directory
WORKDIR /app

# Install system dependencies including kubectl for ConfigMap manipulation
# ca-certificates is good practice for HTTPS calls
# curl for downloading kubectl and other tools
RUN zypper refresh && \
    zypper install -y --no-confirm ca-certificates gzip tar curl sudo && \
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
    chmod +x kubectl && mv kubectl /usr/local/bin/ && \
    zypper clean -a

# Copy application requirements first to leverage Docker cache
COPY app/requirements.txt /app/requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code into the container
COPY app/python-ollama-open-webui.py /app/python-ollama-open-webui.py
COPY frontend /app/frontend


# Expose the ports for Gradio and HTTP API
EXPOSE 7860 8080

# Command to run the application
# Using unbuffered python output for better logging in containers
CMD ["python3", "-u", "python-ollama-open-webui.py"]
