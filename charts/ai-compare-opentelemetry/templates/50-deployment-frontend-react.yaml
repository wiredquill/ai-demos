{{- if .Values.frontend.react.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ai-compare-opentelemetry.fullname" . }}-frontend-react
  annotations:
    description: "Modern React-based dashboard frontend for AI Compare application"
    frontend.type: "react-spa"
    ui.framework: "react-typescript"
  labels:
    {{- include "ai-compare-opentelemetry.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend-react
    ui.type: "modern-dashboard"
spec:
  replicas: {{ .Values.frontend.react.replicas }}
  selector:
    matchLabels:
      app: {{ include "ai-compare-opentelemetry.fullname" . }}-frontend-react
  template:
    metadata:
      annotations:
        frontend.framework: "react-19-typescript"
        ui.description: "Enterprise-grade React dashboard with real-time updates"
        deployment.strategy: "nginx-spa-proxy"
      labels:
        app: {{ include "ai-compare-opentelemetry.fullname" . }}-frontend-react
        ui.type: "react-dashboard"
        frontend.category: "enterprise"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: frontend-react
          image: "{{ .Values.frontend.react.image.repository }}:{{ .Values.frontend.react.image.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          env:
            - name: NODE_ENV
              value: "production"
            - name: BACKEND_SERVICE_URL
              value: "http://{{ include "ai-compare-opentelemetry.fullname" . }}-app-service:8080"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.frontend.react.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 101  # nginx user
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
      volumes:
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
      {{- with .Values.frontend.react.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.react.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.react.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}